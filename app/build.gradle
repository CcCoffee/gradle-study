apply plugin: 'com.android.application'
apply from: this.rootProject.file('releaseInfo.gradle')
apply from: this.project.file('parseReleaseXml.gradle')
apply from: this.project.file('buildCostTime.gradle')
apply from: this.project.file('testTask.gradle')
apply from: this.project.file('copy.gradle')

//定义扩展属性
ext {
    applicationId = "com.example.myapplication"
}

android {
    compileSdkVersion this.rootProject.android.compileSdkVersion
    buildToolsVersion "29.0.2"
    defaultConfig {
//        applicationId mApplicationId
        applicationId this.applicationId
        minSdkVersion 24
        targetSdkVersion mTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

//    sourceSets {
//        main {
//            //为每个业务模块分别创建一个专属的资源文件夹，方便项目资源管理
//            res.srcDirs = ['src/main/res',
//            'src/main/res-user',
//            'src/main/res-player']
//        }
//    }
}

//可以配置在android的闭包外
this.android.sourceSets {
    main {
        //为每个业务模块分别创建一个专属的资源文件夹，方便项目资源管理
        res.srcDirs = ['src/main/res',
                       'src/main/res-user',
                       'src/main/res-player']
    }
}

// 为应用程序添加第三方依赖
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])//本地jar包
    implementation 'androidx.appcompat:appcompat:1.1.0'//远程第三方依赖
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation project(path: ':mylibrary')//本地库工程
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}