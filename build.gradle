// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//配置当前节点项目和子项目的公用配置
allprojects {
    group 'com.imooc'
    version '1.0.0-snapshot'
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 监听配置阶段开始前的监听回调
 */
this.beforeEvaluate {
    println "配置阶段准备执行..." // 执行./gradlew clean && ./gradlew build没有执行此方法
}
/**
 * 配置阶段完成以后的回调
 */
this.afterEvaluate {
    println "配置阶段执行完毕..."
}

this.gradle.buildStarted {
    println "构建阶段执行开始..." // 执行./gradlew clean && ./gradlew build没有执行此方法
}
/**
 * gradle执行完毕之后的回调监听
 */
this.gradle.buildFinished {
    println "构建阶段执行完毕..."
}

this.gradle.beforeProject {}
this.gradle.afterProject {}

//this.getProjects()
//this.getSubProjects()

def getProjects() {
    println '------------------------------------------------------------'
    println 'Root project'
    println '------------------------------------------------------------'
    println ''
    this.getAllprojects().eachWithIndex { Project entry, int i ->
        if (i == 0) {
            println "Root project '${entry.name}'"
        } else if (i == 1) {
            println "+--- Project ':${entry.name}'"
        } else {
            println "\\--- Project ':${entry.name}'"
        }
    }
    println ''
}

def getSubProjects() {
    println '------------------------------------------------------------'
    println 'Sub project'
    println '------------------------------------------------------------'
    println ''
    this.getSubprojects().each { Project entry ->
        println "+--- Project ':${entry.name}'"
    }
    println ''
}

project('app') { Project project ->
    apply plugin: 'com.android.application'
    dependencies {

    }
    android {

    }
}

project('mylibrary') {Project project ->
    apply plugin: 'com.android.library'
}

//println project('app').group

//每一个子项目为库工程的项目推送到maven仓库
subprojects { Project project ->
    if(project.plugins.hasPlugin('com.android.library')){
        apply from: '../publishToMaven.gradle'
    }
}